
global int $valIter = 0;

global float $valStep = 0;

global float $valAng = 0;

global string $grammarPath = 0;
global string $grammar = 0;

global proc fileDialog()
{
	global string $grammarPath;
	global string $grammar;


	$grammarPath = `fileDialog -dm "*.txt"`;
	$file = `fopen $grammarPath "r"`;
    $grammar = `fread $file $grammar`;
	print $grammar;
    scrollField -edit -text $grammar grammarScroll;
    fclose $file;
}

global proc createNode() {
	createNode transform -n LSystem1;
	createNode mesh -n LSystemShape1 -p LSystem1;
	sets -add initialShadingGroup LSystemShape1;
	createNode LSystemNode -n LSystemNode1;
	connectAttr time1.outTime LSystemNode1.time;
	connectAttr LSystemNode1.outputMesh LSystemShape1.inMesh;

}

global proc executeCommand()
{
	global string $grammar;
	$valIter = `intSliderGrp -query -value iter`;
	$valStep = `floatSliderGrp -query -value step`;
	$valAng = `floatSliderGrp -query -value ang`;
	LSystemCmd -i $valIter -ss $valStep -a  $valAng -g $grammar;
}


global proc windowFunction()
{
    window;
		columnLayout;
		scrollField -wordWrap on -text "Grammar" grammarScroll;
		button -command fileDialog -label "Browse for grammar file";
		intSliderGrp -minValue 1 -step 1 -label "Iterations" -field true iter;
		floatSliderGrp -label "Default step size" -field true step;
		floatSliderGrp -minValue -360 -maxValue 360 -label "Default angle" -field true ang;
		button -command "executeCommand();" -label "Call LSystem Command";
	showWindow;
}


menu -parent MayaWindow -label "L System Command" -tearOff true menu1;
	menuItem -label "LSystem Command" -command "windowFunction();";
	menuItem -label "Create node" -command "createNode();";
