global string $iter = 0;
global int $valIter = 0;

global string $step = 0;
global float $valStep = 0;

global string $ang = 0;
global float $valAng = 0;

global string $grammarPath = 0;
global string $grammar = 0;
global string $grammarScroll = 0;

global proc iterValueChanged() {
	global string $iter;
	global int $valIter;

	$valIter = `intSliderGrp -query -value $iter`;
}

global proc stepValueChanged() {
	global string $step;
	global float $valStep;

	$valStep = `floatSliderGrp -query -value $step`;
}

global proc angValueChanged() {
	global string $ang;
	global float $valAng;

	$valAng = `floatSliderGrp -query -value $ang`;
}

global proc fileDialog()
{
	global string $grammarPath;
	global string $grammar;
	global string $grammarScroll;


	$grammarPath = `fileDialog -dm "*.txt"`;
	$file = `fopen $grammarPath "r"`;
    $grammar = `fread $file $grammar`;
    scrollField -edit -text $grammar $grammarScroll;
    fclose $file;
}

global proc createNode() {
	createNode transform -n LSystem1;
	createNode mesh -n LSystemShape1 -p LSystem1;
	sets -add initialShadingGroup LSystemShape1;
	createNode LSystemNode -n LSystemNode1;
	connectAttr time1.outTime LSystemNode1.time;
	connectAttr LSystemNode1.outputMesh LSystemShape1.inMesh;

}


    window;
columnLayout;
    button -command fileDialog -label "Browse for grammar file";
    $grammarScroll = `scrollField -wordWrap on -text "Grammar"`;
    $iter = `intSliderGrp -minValue 1 -step 1 -changeCommand "iterValueChanged()" -label "Iterations" -field true`;
    $step = `floatSliderGrp -changeCommand "stepValueChanged()" -label "Default step size" -field true`;
    $ang = `floatSliderGrp -minValue -360 -maxValue 360 -changeCommand "angValueChanged()" -label "Default angle" -field true`;
    button -command ("LSystemCmd -i "+$valIter+" -ss "+$valStep+" -a  "+$valAng+"" + " -g " + $grammar+"") -label "Call LSystem Command"; 
	print("LSystemCmd -i " + $valIter + " -ss " + $valStep + " -a  " + $valAng + "" + " -g " + $grammar + "");
	button -label "Create LSystem Node" -command createNode;
showWindow;